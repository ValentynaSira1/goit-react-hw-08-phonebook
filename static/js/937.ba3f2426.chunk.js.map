{"version":3,"file":"static/js/937.ba3f2426.chunk.js","mappings":"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","sources":["redux/Contacts/Selectors.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filters/Filters.module.css?0811","components/Filters/Filters.jsx","webpack://react-homework-template/./src/components/contactsListItem/ContactsListItem.module.css?41c8","components/contactsListItem/ContactsListItem.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilterByQuery = state => state.filter.query;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterByQuery],\n  (contacts, query) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(query.toLowerCase())\n    );\n  }\n);","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport css from './ContactForm.module.css';\nimport { addContact } from '../../redux/Contacts/Operations';\nimport { selectContacts } from '../../redux/Contacts/Selectors';\nimport Notiflix from 'notiflix';\n\nexport default function ContactForm () {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const duplicationNameCheck = newName => {\n    return contacts.find(({ name }) => name === newName);\n  };\n\n  const duplicationNumberCheck = newNumber => {\n    return contacts.find(({ number }) => number === newNumber);\n  };\n\nfunction handleChange(e) {\n  const { name, value } = e.target;\n\n  switch (name) {\n    case 'name':\n      setName(value);\n      break;\n\n    case 'number':\n      setNumber(value);\n      break;\n\n    default:\n      break;\n    }\n}\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n\n  if (duplicationNameCheck(name) || duplicationNumberCheck(number)) {\n    Notiflix.Notify.failure(`This contact is already in List`);\n      return;\n  }\n\n  dispatch(addContact({ name, number }));\n    reset();\n  }\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n};\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <label className={css.label}>\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n      </label>\n      <label className={css.label}>\n        Number\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          value={number}\n        />\n      </label>\n      <button className={css.button} type=\"submit\">ADD CONTACTS</button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filters_input__LL0Bh\",\"label\":\"Filters_label__8TKrw\"};","import css from './Filters.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updatedFilter } from '../../redux/Contacts/FilterSlice';\nimport { selectFilterByQuery } from '../../redux/Contacts/Selectors';\n\nexport default function Filters () {\n  const dispatch = useDispatch();\n\n  const onFilter = event => {\n    dispatch(updatedFilter(event.currentTarget.value));\n  };\n\n  const value = useSelector(selectFilterByQuery);\n\n  return (\n    <label className={css.label}>\n      Find contacts by name\n        <input\n          type=\"text\"\n          name=\"filter\"\n          onChange={onFilter}\n          className={css.input}\n          value={value}\n        />\n    </label>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ContactsListItem_button__xdJ8H\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport { deleteContact } from '../../redux/Contacts/Operations';\n\nimport css from './ContactsListItem.module.css';\n\nexport const ContactsListItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  return (\n    <li className=\"contacts__item\">\n      {name}:{number}\n      <button\n        type=\"button\"\n        onClick={() => dispatch(deleteContact(id))}\n        className={css.button}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"contacts__box\":\"ContactsList_contacts__box__NJ6IL\"};","import { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectFilterByQuery,\n} from '../../redux/Contacts/Selectors';\nimport {ContactsListItem} from '../contactsListItem/ContactsListItem';\nimport css from './ContactsList.module.css';\n\nconst selectVisibleContacts = (contacts, query) => {\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(query.toLowerCase())\n  );\n};\n\nexport default function ContactsList () {\n  const contacts = useSelector(selectContacts);\n  const query = useSelector(selectFilterByQuery);\n  const visibleContacts = selectVisibleContacts(contacts, query);\n\n  return (\n    <ul className={css.list}>\n      {contacts &&\n        visibleContacts.map(contact => (\n          <ContactsListItem key={contact.id} {...contact} />\n        ))}\n    </ul>\n  );\n};","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { fetchContacts } from '../../redux/Contacts/Operations';\nimport { selectError, selectIsLoading } from '../../redux/Contacts/Selectors';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport Filters from '../../components/Filters/Filters';\nimport ContactsList from '../../components/ContactsList/ContactsList';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm />\n      </div>\n\n      <div>\n        <h2>Contacts</h2>\n        <Filters />\n        {isLoading ? !error : (\n          <b>Request in progress...</b>\n        )}\n        <ContactsList />\n      </div>\n    </div>\n  );\n}"],"names":["selectContacts","state","contacts","items","selectFilterByQuery","filter","query","selectIsLoading","isLoading","selectError","error","createSelector","name","toLowerCase","includes","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","e","target","value","reset","onSubmit","newNumber","newName","preventDefault","find","Notiflix","addContact","className","css","type","pattern","title","required","onChange","Filters","event","updatedFilter","currentTarget","ContactsListItem","id","onClick","deleteContact","ContactsList","visibleContacts","selectVisibleContacts","map","contact","Contacts","useEffect","fetchContacts"],"sourceRoot":""}